// Add "earliest departure" parameter?

PARAMETER dest.
PARAMETER desiredDeparture IS 0.
PARAMETER desiredOrbit IS "circular".

CLEARSCREEN.

FUNCTION max_duration {
    LOCAL char IS terminal:input:getchar().

    IF char:matchespattern("[0-9]") {
        SET input TO input + char.
        PRINT input at(i,4).

    } ELSE IF char = terminal:input:backspace {
        SET i TO 10.
        SET input TO "".
        PRINT "          " at(i,4).

    } ELSE IF char = terminal:input:enter {
        IF input <> "" { SET new_max TO input:toscalar * 21600. }
        SET done TO TRUE.
    }
}

LOCAL done IS FALSE.
LOCAL i IS 10.
LOCAL input IS "".
LOCAL new_max IS 0.

SET desiredDeparture TO desiredDeparture * 21600.

PRINT " ".
PRINT " " + body:name + ": " + time(body:obt:period):day + " (days)".
PRINT " " + dest:name:substring(0,1):toupper + dest:name:substring(1,dest:name:length-1) + ": " + time(dest:obt:period):day.
PRINT " Synodic: " + time(abs(body:obt:period * dest:obt:period / (body:obt:period - dest:obt:period))):day.
PRINT " New max: _".
PRINT " Leave blank to use default".

UNTIL done {

      IF terminal:input:haschar { max_duration(). }

      IF abort { BREAK. }

      IF mod(time:second,2) = 0 { PRINT "_" at(i + input:length,4). }
      ELSE { PRINT " " at(i + input:length,4). }

      WAIT 0.
}

IF done {
    runoncepath("0:/rsvp/main").
    local options is lexicon(
        "verbose", true,
        "create_maneuver_nodes", "first",
        "earliest_departure", desiredDeparture,
        "search_duration", new_max,
        "final_orbit_type", desiredOrbit
    ).
    rsvp:goto(dest, options).
}

abort OFF.
