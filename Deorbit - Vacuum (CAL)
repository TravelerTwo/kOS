CLEARSCREEN.
SET config:ipu TO 400.
SET terminal:height TO 25.
SET terminal:width TO 40.

FUNCTION sqrt_neg {
    PARAMETER p.
    RETURN CHOOSE -sqrt(-p) IF p < 0 ELSE sqrt(p).
}

FUNCTION v_accel {
    LOCAL altError IS navAlt - altitude.
    LOCAL cenAccel IS vxcl(up:vector, velocity:orbit):sqrmagnitude / body:position:mag.
    LOCAL corAccel IS (-2 * vcrs(body:angularvel, velocity:surface)):mag.
    LOCAL navLimit IS verticalspeed^2 / 2 / altError + cenAccel + corAccel.
    LOCAL navSpeed IS 2 * altError / 30 - verticalspeed.

    RETURN ((navSpeed - verticalspeed) / 10 + g - navLimit).
}

// PHYSICAL PROPERTIES.
LOCAL b IS ship:bounds.
LOCAL g IS body:mu / (body:radius + periapsis)^2.

// VARIABLES.
LOCAL maxAccel IS ship:availablethrust / ship:mass.
LOCAL navAlt IS CHOOSE periapsis IF periapsis > 1000 ELSE altitude.
LOCAL navPitch IS 90.
LOCAL navTime IS 1.
LOCAL srfPitch IS vang(up:vector, -velocity:surface).

LOCAL hAccel IS 1.
LOCAL vAccel IS g.
LOCAL burnAccel IS verticalspeed^2 / 2 / altitude + g.
LOCAL burnThrot IS burnAccel / maxAccel.

// SYSTEM CONTROL.
LOCAL modeBrake IS TRUE.
LOCAL modeBurn IS FALSE.
LOCAL steeringCtrl IS facing:vector.
LOCAL throttleCtrl IS 1.

PRINT " ".
PRINT " Local gravity =".
PRINT " Local TWR     =".
PRINT " ".
PRINT " Radar alt     =".
PRINT " Target alt    = " + round(navAlt).
PRINT " Throttle      =".
PRINT " ".
PRINT " Time to stop  =".
PRINT "--------------------------".
PRINT " ".
PRINT " h accel       =".
PRINT " v accel       =".
PRINT " Pitch angle   =".
PRINT " ".
PRINT " Groundspeed   =".
PRINT " Verticalspeed =".
PRINT "--------------------------".

rcs OFF.
sas OFF.
LOCK steering TO steeringCtrl.

UNTIL sas {

      IF modeBrake {

            IF groundspeed > 5 { SET vAccel TO v_accel(). }

            SET hAccel TO sqrt_neg(maxAccel^2 - vAccel^2).
            SET navPitch TO arccos(max(-0.99, min(0.99, vAccel / maxAccel))).
            SET navTime TO groundspeed / hAccel.
            SET steeringCtrl TO angleaxis(navPitch, vcrs(velocity:surface, up:vector)) * up:vector.

            PRINT round(hAccel,2) + "    " at(17,11).
            PRINT round(vAccel,2) + "    " at(17,12).

            IF NOT modeBurn AND (eta:periapsis < 1 OR periapsis < 1) {
                  SET modeBurn TO TRUE.
                  LOCK throttle TO 1.
            }

            IF groundspeed < 1 {
                  SET modeBrake TO FALSE.
                  SET modeBurn TO FALSE.
                  LOCK throttle TO 0.
            }

      } ELSE {

            SET hAccel TO 2 * vxcl(up:vector, -velocity:surface) / max(5, navTime - 5).
            SET hAccel:mag TO min(hAccel:mag, sqrt_neg((burnAccel / cos(navPitch))^2 - burnAccel^2)).
            SET vAccel TO burnAccel * up:vector.
            SET burnAccel TO CHOOSE g IF verticalspeed > -1 ELSE verticalspeed^2 / 2 / (b:bottomaltradar - max(groundspeed, 1)) + g.
            SET burnThrot TO burnAccel / maxAccel / cos(navPitch).
            SET navPitch TO min(navPitch, srfPitch).
            SET navTime TO (verticalspeed + sqrt_neg(verticalspeed^2 + 2 * g * b:bottomaltradar)) / g.
            SET srfPitch TO vang(up:vector, -velocity:surface).
            SET steeringCtrl TO CHOOSE hAccel + vAccel IF modeBurn ELSE -velocity:surface.
            SET steeringCtrl TO lookdirup(steeringCtrl, facing:topvector).
            SET throttleCtrl TO burnThrot.

            PRINT round(hAccel:mag,2) + "    " at(17,11).
            PRINT round(vAccel:mag,2) + "    " at(17,12).

            IF NOT modeBurn AND verticalspeed < -5 AND (throttleCtrl > 0.9 OR b:bottomaltradar < 500) {
                  SET modeBurn TO TRUE.
                  LOCK throttle TO throttleCtrl.
            }

            IF NOT gear AND navTime < 5 { gear ON. }

            IF ship:status = "landed" { BREAK. }
      }

      SET g TO body:mu / body:position:sqrmagnitude.
      SET maxAccel TO max(0.0001, ship:availablethrust / ship:mass).

      PRINT round(g,2) + "    " at(17,1).
      PRINT round(maxAccel / g,2) + "    " at(17,2).
      PRINT round(b:bottomaltradar) + "  " at(17,4).
      PRINT round(throttleCtrl,2) + "    " at(17,6).
      PRINT round(navTime,1) + "  " at(17,8).
      PRINT round(navPitch,2) + "    " at(17,13).
      PRINT round(groundspeed,2) + "    " at(17,15).
      PRINT round(verticalspeed,2) + "    " at(17,16).

      WAIT 0.
}

SET ship:control:pilotmainthrottle TO 0.
SET ship:control:neutralize TO TRUE.
SET throttleCtrl TO 0.
UNLOCK ALL.
rcs OFF.
sas ON.
